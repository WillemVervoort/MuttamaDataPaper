geom_text(aes(100 - p$grid1$x2, sort(p$grid1$y2), label = c(20, 40, 60, 80)), nudge_x = 5,
size = label.size -1, angle = 0) + # Na axis  , vjust = -1, hjust = 0
geom_text(aes(p$grid1$x1, p$grid1$y1, label = c(80, 60, 40, 20)), nudge_y = -5,
size = label.size -1, angle = -60 ) + # Ca axis , vjust = -.5
geom_text(aes(p$grid2$x2, p$grid2$y2, label = c(20, 40, 60, 80)),  nudge_x = -5,
size = label.size -1, angle = 0) + # HCO3 axis  c(155, 145, 135, 125), vjust = -1, hjust = 1
geom_text(aes(sort(p$grid2$x2, decreasing = T) + 50, p$grid2$y2,
label = c(20, 40, 60, 80)), nudge_x = 5,
size = label.size -1, angle = 0) + # SO4 axis c(215, 205, 195, 185)
geom_text(aes(p$grid2$x1, p$grid1$y1, label = c(20, 40, 60, 80)),
size = label.size -1, angle = 60, nudge_y = -5) + # Cl axis
geom_text(aes(p$grid3_1$x2, p$grid3_1$y2, label = c(20, 40, 60, 80)), nudge_x = 5, nudge_y = 5,
size = label.size -1, angle =  60, vjust = 0, hjust = 0) + # diamond Ca axis
geom_text(aes(p$grid3_2$x2, p$grid3_2$y2, label = c(20, 40, 60, 80)), nudge_x = -5, nudge_y = 5,
size = label.size -1, angle = -60, vjust = 0, hjust = 0) # diamond SO4 axis
return(p2)
}
# add the labels
p2 <- label_function(plot_obj_list = p1, label.size = 4)
p2
######################################
#' label_function
#'
#' Function to label the axes in the piper plot
#' @param plot_obj_list
#' @param label.size
label_function <- function(plot_obj_list, label.size = 4) {
p <- plot_obj_list
#browser()
#### Labels and grid values
p2 <- p$plot_obj + coord_fixed(ratio = 1) +
geom_text(aes(15,   50, label = "Mg^'2+'"), angle = 60, size = label.size,
parse = TRUE) +
geom_text(aes(83.5, 50, label = "Na^'+'~+~K^'+'"), angle = -60,
size = label.size, parse = T) +
geom_text(aes(50,  -14, label = "Ca^'2+'"), size = label.size,
parse = TRUE) +
geom_text(aes(170,   -14, label = "Cl^'-'"), size = label.size,
parse = TRUE) +
geom_text(aes(205,    50, label = "SO[4]^'2-'"), angle = -60,
size = label.size, parse = TRUE) +
geom_text(aes(137,  50, label = "Alkalinity~as~HCO[3]^'-'"), angle = 60,
size = label.size, parse = TRUE) +
geom_text(aes( 72.5, 150, label = "SO[4]^'2-'~+~Cl^'-'"), angle = 60,
size = label.size, parse = TRUE) +
geom_text(aes(147.5, 150, label = "Ca^'2+'~+~Mg^'2+'"), angle = -60,
size = label.size, parse = TRUE) +
geom_text(aes(p$grid1$x2, p$grid1$y2, label = c(80, 60, 40, 20)), nudge_x = -5,
size = label.size -1, angle = 0) + # Mg axis
geom_text(aes(100 - p$grid1$x2, sort(p$grid1$y2), label = c(20, 40, 60, 80)), nudge_x = 5,
size = label.size -1, angle = 0) + # Na axis  , vjust = -1, hjust = 0
geom_text(aes(p$grid1$x1, p$grid1$y1, label = c(80, 60, 40, 20)), nudge_y = -5,
size = label.size -1, angle = -60 ) + # Ca axis , vjust = -.5
geom_text(aes(p$grid2$x2, p$grid2$y2, label = c(20, 40, 60, 80)),  nudge_x = -5,
size = label.size -1, angle = 0) + # HCO3 axis  c(155, 145, 135, 125), vjust = -1, hjust = 1
geom_text(aes(sort(p$grid2$x2, decreasing = T) + 50, p$grid2$y2,
label = c(20, 40, 60, 80)), nudge_x = 5,
size = label.size -1, angle = 0) + # SO4 axis c(215, 205, 195, 185)
geom_text(aes(p$grid2$x1, p$grid1$y1, label = c(20, 40, 60, 80)),
size = label.size -1, angle = 60, nudge_y = -5) + # Cl axis
geom_text(aes(p$grid3_1$x2, p$grid3_1$y2, label = c(20, 40, 60, 80)), nudge_y = 5,
size = label.size -1, angle =  60, vjust = 0, hjust = 0) + # diamond Ca axis
geom_text(aes(p$grid3_2$x2, p$grid3_2$y2, label = c(20, 40, 60, 80)), nudge_x = -5, nudge_y = 5,
size = label.size -1, angle = -60, vjust = 0, hjust = 0) # diamond SO4 axis
return(p2)
}
# add the labels
p2 <- label_function(plot_obj_list = p1, label.size = 4)
p2
# Now points can be added like...
p2 + geom_point(aes(x,y), data=piper_data)
# colouring the points can be done using the observation value.
p2 + geom_point(aes(x,y, colour=factor(observation)), data=piper_data)
# The size can be changed like..
p2 + geom_point(aes(x,y, colour=factor(observation)), size=4, data=piper_data)
#########################################
#' piper_ggplot
#'
#' piper plot function to put everything together: plot, grid and labels
piper_ggplot <- function(label_size = 4) {
p <- ggplot_piper()
p1 <- grid_function(ggplot_obj = p)
p2 <- label_function(plot_obj_list = p1, label.size = label_size)
return(p2)
}
## Or do it all at once
piper_ggplot()
# Now points can be added like...
piper_ggplot() + geom_point(aes(x,y), data=piper_data)
# colouring the points can be done using the observation value.
piper_ggplot() + geom_point(aes(x,y, colour=factor(observation)), data=piper_data)
# The size can be changed like..
piper_ggplot() + geom_point(aes(x,y, colour=factor(observation)), size=4, data=piper_data)
## Change colours and shapes and merging the legends together
piper_ggplot + geom_point(aes(x,y, colour=factor(observation), shape=factor(observation)), size=4, data=piper_data) +
scale_colour_manual(name="legend name must be the same", values=c("#999999", "#E69F00", "#56B4E9"), labels=c("Control", "Treatment 1", "Treatment 2")) +
scale_shape_manual(name="legend name must be the same", values=c(1,2,3), labels=c("Control", "Treatment 1", "Treatment 2"))
## Change colours and shapes and merging the legends together
piper_ggplot + geom_point(aes(x,y, colour=factor(observation), shape=factor(observation)), size=4, data=piper_data) +
scale_colour_manual(name="legend name must be the same", values=c("#999999", "#E69F00", "#56B4E9"), labels=c("Control", "Treatment 1", "Treatment 2")) +
scale_shape_manual(name="legend name must be the same", values=c(1,2,3), labels=c("Control", "Treatment 1", "Treatment 2"))
## Change colours and shapes and merging the legends together
piper_ggplot() + geom_point(aes(x,y, colour=factor(observation), shape=factor(observation)), size=4, data=piper_data) +
scale_colour_manual(name="legend name must be the same", values=c("#999999", "#E69F00", "#56B4E9"), labels=c("Control", "Treatment 1", "Treatment 2")) +
scale_shape_manual(name="legend name must be the same", values=c(1,2,3), labels=c("Control", "Treatment 1", "Treatment 2"))
######################################
#' label_function
#'
#' Function to label the axes in the piper plot
#' @param plot_obj_list
#' @param label.size
label_function <- function(plot_obj_list, label.size = 4, nudge = 5) {
p <- plot_obj_list
#browser()
#### Labels and grid values
p2 <- p$plot_obj + coord_fixed(ratio = 1) +
geom_text(aes(15,   50, label = "Mg^'2+'"), angle = 60, size = label.size,
parse = TRUE) +
geom_text(aes(83.5, 50, label = "Na^'+'~+~K^'+'"), angle = -60,
size = label.size, parse = T) +
geom_text(aes(50,  -14, label = "Ca^'2+'"), size = label.size,
parse = TRUE) +
geom_text(aes(170,   -14, label = "Cl^'-'"), size = label.size,
parse = TRUE) +
geom_text(aes(205,    50, label = "SO[4]^'2-'"), angle = -60,
size = label.size, parse = TRUE) +
geom_text(aes(137,  50, label = "Alkalinity~as~HCO[3]^'-'"), angle = 60,
size = label.size, parse = TRUE) +
geom_text(aes( 72.5, 150, label = "SO[4]^'2-'~+~Cl^'-'"), angle = 60,
size = label.size, parse = TRUE) +
geom_text(aes(147.5, 150, label = "Ca^'2+'~+~Mg^'2+'"), angle = -60,
size = label.size, parse = TRUE) +
geom_text(aes(p$grid1$x2, p$grid1$y2, label = c(80, 60, 40, 20)),
nudge_x = -nudge,
size = label.size -1, angle = 0) + # Mg axis
geom_text(aes(100 - p$grid1$x2, sort(p$grid1$y2), label = c(20, 40, 60, 80)),
nudge_x = nudge,
size = label.size -1, angle = 0) + # Na axis  , vjust = -1, hjust = 0
geom_text(aes(p$grid1$x1, p$grid1$y1, label = c(80, 60, 40, 20)),
nudge_y = -nudge,
size = label.size -1, angle = -60 ) + # Ca axis , vjust = -.5
geom_text(aes(p$grid2$x2, p$grid2$y2, label = c(20, 40, 60, 80)),
nudge_x = -nudge,
size = label.size -1, angle = 0) + # HCO3 axis  c(155, 145, 135, 125), vjust = -1, hjust = 1
geom_text(aes(sort(p$grid2$x2, decreasing = T) + 50, p$grid2$y2,
label = c(20, 40, 60, 80)), nudge_x = nudge,
size = label.size -1, angle = 0) + # SO4 axis c(215, 205, 195, 185)
geom_text(aes(p$grid2$x1, p$grid1$y1, label = c(20, 40, 60, 80)),
size = label.size -1, angle = 60, nudge_y = -nudge) + # Cl axis
geom_text(aes(p$grid3_1$x2, p$grid3_1$y2, label = c(20, 40, 60, 80)),
nudge_y = 0.5*nudge,nudge_x = 0.5*nudge,
size = label.size -1, angle =  60, vjust = 0, hjust = 0) + # diamond Ca axis
geom_text(aes(p$grid3_2$x2, p$grid3_2$y2, label = c(20, 40, 60, 80)),
nudge_x = -nudge, nudge_y = nudge,
size = label.size -1, angle = -60, vjust = 0, hjust = 0) # diamond SO4 axis
return(p2)
}
#########################################
#' piper_ggplot
#'
#' piper plot function to put everything together: plot, grid and labels
piper_ggplot <- function(label_size = 4, nudge_out = 5) {
p <- ggplot_piper()
p1 <- grid_function(ggplot_obj = p)
p2 <- label_function(plot_obj_list = p1, label.size = label_size,
nudge = nudge_out)
return(p2)
}
# colouring the points can be done using the observation value.
piper_ggplot() + geom_point(aes(x,y, colour=factor(observation)), data=piper_data)
options(tinytex.verbose = TRUE)
require(knitr)
require(bookdown)
require(pander)
require(tidyverse)
require(lubridate)
require(ggpubr) # saving ggplot figures
library(kableExtra) ##table formatting package
require(multirow)
require(caption)
#require(mgcv) # probably no longer needed
library(sf)
#library(rgdal) # check if spatial stuff still works
#library(graphics) #needed?
library(raster)
library(ggspatial)
require(factoextra)
theme_set(theme_bw()) # ggplot theme
dry<-read_csv("../Muttama Dataset analysis/Data/dryland salinity papers.csv")%>%
dplyr::rename(Year='Publication year')%>%
dplyr::rename(Papers='Number of Papers')
setwd("C:/Users/rver4657/Sydney Uni Dropbox/willem vervoort/Research/MuttamaDataPaper/MuttamaDataPaper/MuttamaDataPaper")
dry<-read_csv("../Muttama Dataset analysis/Data/dryland salinity papers.csv")%>%
dplyr::rename(Year='Publication year')%>%
dplyr::rename(Papers='Number of Papers')
dry<-read_csv("Data/dryland salinity papers.csv")%>%
dplyr::rename(Year='Publication year')%>%
dplyr::rename(Papers='Number of Papers')
dry%>%
dplyr::select(Year,Papers)%>%
ggplot(aes(Year,Papers)) + geom_col(fill='slateblue3') +theme_classic2() +xlab('Year of Publication') + ylab('Number of Papers')
ggsave('Figures/Dryland Salinity Papers.png',dpi=300)
dry<-read_csv("Data/dryland salinity papers.csv")%>%
dplyr::rename(Year='Publication year')%>%
dplyr::rename(Papers='Number of Papers')
dry%>%
dplyr::select(Year,Papers)%>%
ggplot(aes(Year,Papers)) + geom_col(fill='slateblue3') +theme_classic2() +xlab('Year of Publication') + ylab('Number of Papers')
ggsave('Figures/Dryland Salinity Papers.png',dpi=300)
knitr::include_graphics("Figures/Dryland Salinity Papers.png")
#Dryland Salinity Papers.rmd
# Read in the streamflow data
coolac<-read_csv('Data/coolac.csv')
coolac <- coolac %>%
mutate(Date = ymd_hms(`#Timestamp`))%>%
mutate(Date = date(Date))%>%
rename(Flow = Value)%>%
select(Date, Flow)
# Read in the streamflow data
coolac<-read_csv('Data/coolac.csv')
coolac <- coolac %>%
mutate(Date = ymd_hms(`#Timestamp`))%>%
mutate(Date = date(Date))%>%
rename(Flow = Value)%>%
dplyr::select(Date, Flow)
##read in Muttama water quality data data
Muttama_data<-read_csv("Data/MuttamaWaterQuality_DATA_2023-10-03_1141.csv")
Muttama_data<-Muttama_data%>%
mutate(datetime = dmy_hm(datetime)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = substr(record_id,14,15),
src = replace_na(src,1),
site_code = substr(record_id,14,17))
## Groundwater level data (summarised to daily and corrected)
GW_data <- read_csv("Data/Muttama_piezometer_output.csv") %>%
mutate(datetime = ymd(Date)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = "NA",
site_code = Piezo)
# Rainfall data
rainfall<-read_csv("../Muttama Dataset Analysis/Data/Cootamundra_rainfall.csv")
# Read in the streamflow data
coolac<-read_csv('Data/coolac.csv')
coolac <- coolac %>%
mutate(Date = ymd_hms(`#Timestamp`))%>%
mutate(Date = date(Date))%>%
rename(Flow = Value)%>%
dplyr::select(Date, Flow)
##read in Muttama water quality data data
Muttama_data<-read_csv("Data/MuttamaWaterQuality_DATA_2023-10-03_1141.csv")
Muttama_data<-Muttama_data%>%
mutate(datetime = dmy_hm(datetime)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = substr(record_id,14,15),
src = replace_na(src,1),
site_code = substr(record_id,14,17))
## Groundwater level data (summarised to daily and corrected)
GW_data <- read_csv("Data/Muttama_piezometer_output.csv") %>%
mutate(datetime = ymd(Date)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = "NA",
site_code = Piezo)
# Rainfall data
rainfall<-read_csv("Data/Cootamundra_rainfall.csv")
rainfall <- rainfall %>%
mutate(Date = ymd(paste(Year,Month,Day, sep = "-")))
# include the coordinates for the sample data
coord <- read_csv("Data/SiteList.csv")
coord <- coord %>%
mutate(site_m = substr(site_code,3,4))%>%
transform(site_m = as.integer(site_m))
Muttama <- left_join(Muttama_data, coord,
by = c('site_code', "site_mut"),
copy = T)
Muttama_gw <- left_join(GW_data, coord,
by = 'site_code',
copy = T)
knitr::include_graphics("Figures/gw_or_sw_map.png")
#Muttama_maps.rmd
field<-c('pH','EC (Electrical conductivity)', 'SPC (temperature corrected EC)', 'Temperature', 'Alkalinity (HCO3)', 'Dissolved Oxygen (DO)', 'Turbidity')
lab<-read_csv('../../Muttama Dataset Analysis/Data/lab.csv')
field<-c('pH','EC (Electrical conductivity)', 'SPC (temperature corrected EC)', 'Temperature', 'Alkalinity (HCO3)', 'Dissolved Oxygen (DO)', 'Turbidity')
lab<-read_csv('Data/lab.csv')
table_M <- tibble(`Field measurements` = c(field,rep(NA,2)),
`Lab repeat` = c(unlist(lab[1:3,1]), rep(NA,6)),
`Anions` = c(unlist(lab[4:9,1]),rep(NA,3)),
`Cations` = unlist(lab[,2]))
options(knitr.kable.NA = '')
knitr::kable(table_M, "latex", caption = "Variables measured in the field and laboratory") %>% kable_styling()
Muttama_na<- Muttama %>%
dplyr::select(everything()) %>%
group_by(src) %>%
summarise_all(funs(sum(is.na(.)/nrow(Muttama))*100))
Muttama_na%>%
pivot_longer(temp_field:nh3_field,
names_to = "Measurement",
values_to = "Number_NA") %>%
ggplot(aes(x = Measurement, y = Number_NA,
fill = as.factor(src))) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x= element_text(angle=90)) +
ylab("NA values in dataset (%)") + labs(fill="Source")
ggsave("Figures/na_count.png", unit="cm", dpi = 300)
#GWdata <- read_csv("../Muttama Dataset Analysis/Data/Muttama_Piezometer_Output.csv")
no_piezo <- length(unique(GWdata$Piezo))
#GWdata <- read_csv("../Muttama Dataset Analysis/Data/Muttama_Piezometer_Output.csv")
no_piezo <- length(unique(Muttama_gw$Piezo))
GWdata_NA <- Muttama_gw %>%
mutate(na_value = ifelse(is.na(`Final GW Depth (m)`)==T,1,0)) %>%
group_by(Date) %>%
summarise(NA_count = sum(na_value)/no_piezo*100,
Piezo = unique(Piezo))
GWdata_NA %>%
ggplot(aes(Date, NA_count)) + geom_bar(fill = "blue", stat="identity") +
ylim(0,75) + theme_bw() + ylab("% missing values across all piezo's") +
theme(axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.5))
ggsave("Figures/na_GW.png", unit="cm", dpi = 300)
#GWdata <- read_csv("../Muttama Dataset Analysis/Data/Muttama_Piezometer_Output.csv")
no_piezo <- length(unique(Muttama_gw$Piezo))
GWdata_NA <- Muttama_gw %>%
mutate(na_value = ifelse(is.na(`Final GW Depth (m)`)==T,1,0)) %>%
group_by(Date) %>%
summarise(NA_count = sum(na_value)/no_piezo*100,
Piezo = unique(Piezo))
GWdata_NA %>%
ggplot(aes(Date, NA_count)) + geom_bar(fill = "blue", stat="identity") +
ylim(0,75) + theme_bw() + ylab("% missing values across all piezo's") +
theme(axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.5)))
ggsave("Figures/na_GW.png", unit="cm", dpi = 300)
knitr::include_graphics("Figures/na_count.png")
#Muttama_NA_count.rmd
knitr::include_graphics("Figures/na_GW.png")
##GW
Muttama_sum<- Muttama_data %>%
select_at(vars('gw_or_sw',temp_field:nh3_field))%>%
subset(gw_or_sw=='GW')%>%
group_by(gw_or_sw)%>%
summarise_all(funs(mean,min,max),na.rm=T)
means <- Muttama_sum %>%
gather(key = "element", value="Mean", ends_with("mean")) %>%
select(element,Mean)
##GW
Muttama_sum<- Muttama_data %>%
select_at(vars('gw_or_sw',temp_field:nh3_field))%>%
subset(gw_or_sw=='GW')%>%
group_by(gw_or_sw)%>%
summarise_all(funs(mean,min,max),na.rm=T)
means <- Muttama_sum %>%
gather(key = "element", value="Mean", ends_with("mean")) %>%
dplyr::select(element,Mean)
mins <- Muttama_sum %>%
gather(key = "element1", value="Min", ends_with("min")) %>%
dplyr::select(element1,Min)
max <- Muttama_sum %>%
gather(key = "element2", value="Max", ends_with("max")) %>%
dplyr::select(element2,Max)
muttama_statGW<-cbind(means,mins,max)%>%
mutate(element=substr(element,1,nchar(element)-5))%>%
dplyr::select(c(element,Mean,Min,Max))%>%
mutate_if(is.numeric,round,1)
##SW
Muttama_sum<- Muttama_data %>%
select_at(vars('gw_or_sw',temp_field:nh3_field))%>%
subset(gw_or_sw=='SW')%>%
group_by(gw_or_sw)%>%
summarise_all(funs(mean,min,max),na.rm=T)
means <- Muttama_sum %>%
gather(key = "element", value="Mean", ends_with("mean")) %>%
dplyr::select(element,Mean)
mins <- Muttama_sum %>%
gather(key = "element1", value="Min", ends_with("min")) %>%
dplyr::select(element1,Min)
max <- Muttama_sum %>%
gather(key = "element2", value="Max", ends_with("max")) %>%
dplyr::select(element2,Max)
muttama_statSW<-cbind(means,mins,max)%>%
mutate(element=substr(element,1,nchar(element)-5))%>%
dplyr::select(c(Mean,Min,Max))%>%
mutate_if(is.numeric,round,1)
##combine SW and GW
muttama_stat<-cbind(muttama_statGW,muttama_statSW)%>%
as.data.frame()
#write.table(muttama_stat,file='Muttamastat.csv',sep=',',qmethod='double')
#muttama_stat<-read.csv('../../Muttama Dataset Analysis/Data/Muttamastat.csv')
muttama_stat%>%
knitr::kable("latex", col.names = c('Element', rep(c('Mean', 'Min', 'Max'), 2)),caption='Summary statistics for elements measured in the field') %>%
add_header_above(c('', 'GW'=3, 'SW'=3))%>% kable_styling()
#Muttama_NA_count
knitr::include_graphics("Figures/gwsw.png")
#Muttama_ph_ec
knitr::include_graphics("Figures/monthly.png")
#Muttama_Time.rmd
knitr::include_graphics("Figures/annual.png")
#Muttama_Time.rmd
knitr::include_graphics("Figures/FDC.png")
#Muttama_FDC.rmd
knitr::include_graphics("Figures/Final_Corrected_piezodepths.png")
knitr::include_graphics("Figures/ec_map.png")
#Muttama_maps.rmd
knitr::include_graphics("Figures/ec_plot.png")
#Muttama_maps.rmd
knitr::include_graphics("Figures/clhco3_map.png")
#Muttama_maps.rmd
knitr::include_graphics("Figures/clhco3_plot.png")
#Muttama_maps.rmd
# input data need to be in % divide by sums
cation_sum <-  Muttama_data$ca_meq_l +  Muttama_data$mg_meq_l +
Muttama_data$na_meq_l +  Muttama_data$k_meq_l
anion_sum <- Muttama_data$cl_meq_l + Muttama_data$hco3_meq_l +
Muttama_data$so4_meq_l
piper_data <- tibble(Ca = Muttama_data$ca_meq_l/cation_sum,
Mg = Muttama_data$mg_meq_l/cation_sum,
Cl = Muttama_data$cl_meq_l/anion_sum,
SO4 = Muttama_data$so4_meq_l/anion_sum,
name = Muttama_data$gw_or_sw,
ion_balance = Muttama_data$ion_balance)
# load the piper plot code
source("scripts/ggplot_piper.R")
piper_data <- transform_piper_data(Mg = piper_data$Mg,
Ca = piper_data$Ca,
Cl = piper_data$Cl, SO4 = piper_data$SO4,
name = piper_data$name, offset = 1)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,(y), colour=factor(observation)), size=4, data=piper_data)
# input data need to be in % divide by sums
cation_sum <-  Muttama_data$ca_meq_l +  Muttama_data$mg_meq_l +
Muttama_data$na_meq_l +  Muttama_data$k_meq_l
anion_sum <- Muttama_data$cl_meq_l + Muttama_data$hco3_meq_l +
Muttama_data$so4_meq_l
piper_data <- tibble(Ca = Muttama_data$ca_meq_l/cation_sum,
Mg = Muttama_data$mg_meq_l/cation_sum,
Cl = Muttama_data$cl_meq_l/anion_sum,
SO4 = Muttama_data$so4_meq_l/anion_sum,
name = Muttama_data$gw_or_sw,
ion_balance = Muttama_data$ion_balance)
# load the piper plot code
source("scripts/ggplot_piper.R")
piper_data <- transform_piper_data(Mg = piper_data$Mg,
Ca = piper_data$Ca,
Cl = piper_data$Cl, SO4 = piper_data$SO4,
name = piper_data$name)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,(y), colour=factor(observation)), size=4, data=piper_data)
# input data need to be in % divide by sums
cation_sum <-  Muttama_data$ca_meq_l +  Muttama_data$mg_meq_l +
Muttama_data$na_meq_l +  Muttama_data$k_meq_l
anion_sum <- Muttama_data$cl_meq_l + Muttama_data$hco3_meq_l +
Muttama_data$so4_meq_l
piper_data <- tibble(Ca = Muttama_data$ca_meq_l/cation_sum,
Mg = Muttama_data$mg_meq_l/cation_sum,
Cl = Muttama_data$cl_meq_l/anion_sum,
SO4 = Muttama_data$so4_meq_l/anion_sum,
name = Muttama_data$gw_or_sw,
ion_balance = Muttama_data$ion_balance)
# load the piper plot code
source("scripts/ggplot_piper.R")
piper_data_plot <- transform_piper_data(Mg = piper_data$Mg,
Ca = piper_data$Ca,
Cl = piper_data$Cl, SO4 = piper_data$SO4,
name = piper_data$name)
View(piper_data_plot)
View(piper_data)
# input data need to be in % divide by sums
cation_sum <-  Muttama_data$ca_meq_l +  Muttama_data$mg_meq_l +
Muttama_data$na_meq_l +  Muttama_data$k_meq_l
anion_sum <- Muttama_data$cl_meq_l + Muttama_data$hco3_meq_l +
Muttama_data$so4_meq_l
piper_data <- tibble(Ca = Muttama_data$ca_meq_l/cation_sum*100,
Mg = Muttama_data$mg_meq_l/cation_sum*100,
Cl = Muttama_data$cl_meq_l/anion_sum*100,
SO4 = Muttama_data$so4_meq_l/anion_sum*100,
name = Muttama_data$gw_or_sw,
ion_balance = Muttama_data$ion_balance)
# load the piper plot code
source("scripts/ggplot_piper.R")
piper_data_plot <- transform_piper_data(Mg = piper_data$Mg,
Ca = piper_data$Ca,
Cl = piper_data$Cl, SO4 = piper_data$SO4,
name = piper_data$name)
View(piper_data_plot)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,y, colour=factor(observation)), size=4, data=piper_data_plot)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,y, colour=factor(observation)), size=2, data=piper_data_plot)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,y, colour=factor(observation)), size=2, data=piper_data_plot)
ggsave("Figures/piper_plot.png", unit="cm", dpi = 300,
width = 15, height = 20)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,y, colour=factor(observation)), size=2, data=piper_data_plot) + scale_colour_manual(name="Ground Water or Surface Water", values=c(GW = "red", SW = "darkblue"))
ggsave("Figures/piper_plot.png", unit="cm", dpi = 300,
width = 15, height = 20)
ggsave("Figures/piper_plot.png", unit="cm", dpi = 300,
width = 20, height = 10)
knitr::include_graphics("Figures/piper_plot.png")
#Muttama_maps.rmd
install.packages("rticles")
tinytex::reinstall_tinytex(repository = "illinois")
View(Muttama_data)
View(Muttama)
unlink("MuttamaDataPaper_cache", recursive = TRUE)
unlink("MuttamaDataPaper_cache", recursive = TRUE)
