dplyr::rename(Year='Publication year')%>%
dplyr::rename(Papers='Number of Papers')
dry%>%
dplyr::select(Year,Papers)%>%
ggplot(aes(Year,Papers)) + geom_col(fill='slateblue3') +theme_classic2() +xlab('Year of Publication') + ylab('Number of Papers')
ggsave('Figures/Dryland Salinity Papers.png',dpi=300)
dry<-read_csv("Data/dryland salinity papers.csv")%>%
dplyr::rename(Year='Publication year')%>%
dplyr::rename(Papers='Number of Papers')
dry%>%
dplyr::select(Year,Papers)%>%
ggplot(aes(Year,Papers)) + geom_col(fill='slateblue3') +theme_classic2() +xlab('Year of Publication') + ylab('Number of Papers')
ggsave('Figures/Dryland Salinity Papers.png',dpi=300)
knitr::include_graphics("Figures/Dryland Salinity Papers.png")
#Dryland Salinity Papers.rmd
# Read in the streamflow data
coolac<-read_csv('Data/coolac.csv')
coolac <- coolac %>%
mutate(Date = ymd_hms(`#Timestamp`))%>%
mutate(Date = date(Date))%>%
rename(Flow = Value)%>%
select(Date, Flow)
# Read in the streamflow data
coolac<-read_csv('Data/coolac.csv')
coolac <- coolac %>%
mutate(Date = ymd_hms(`#Timestamp`))%>%
mutate(Date = date(Date))%>%
rename(Flow = Value)%>%
dplyr::select(Date, Flow)
##read in Muttama water quality data data
Muttama_data<-read_csv("Data/MuttamaWaterQuality_DATA_2023-10-03_1141.csv")
Muttama_data<-Muttama_data%>%
mutate(datetime = dmy_hm(datetime)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = substr(record_id,14,15),
src = replace_na(src,1),
site_code = substr(record_id,14,17))
## Groundwater level data (summarised to daily and corrected)
GW_data <- read_csv("Data/Muttama_piezometer_output.csv") %>%
mutate(datetime = ymd(Date)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = "NA",
site_code = Piezo)
# Rainfall data
rainfall<-read_csv("../Muttama Dataset Analysis/Data/Cootamundra_rainfall.csv")
# Read in the streamflow data
coolac<-read_csv('Data/coolac.csv')
coolac <- coolac %>%
mutate(Date = ymd_hms(`#Timestamp`))%>%
mutate(Date = date(Date))%>%
rename(Flow = Value)%>%
dplyr::select(Date, Flow)
##read in Muttama water quality data data
Muttama_data<-read_csv("Data/MuttamaWaterQuality_DATA_2023-10-03_1141.csv")
Muttama_data<-Muttama_data%>%
mutate(datetime = dmy_hm(datetime)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = substr(record_id,14,15),
src = replace_na(src,1),
site_code = substr(record_id,14,17))
## Groundwater level data (summarised to daily and corrected)
GW_data <- read_csv("Data/Muttama_piezometer_output.csv") %>%
mutate(datetime = ymd(Date)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = "NA",
site_code = Piezo)
# Rainfall data
rainfall<-read_csv("Data/Cootamundra_rainfall.csv")
rainfall <- rainfall %>%
mutate(Date = ymd(paste(Year,Month,Day, sep = "-")))
# include the coordinates for the sample data
coord <- read_csv("Data/SiteList.csv")
coord <- coord %>%
mutate(site_m = substr(site_code,3,4))%>%
transform(site_m = as.integer(site_m))
Muttama <- left_join(Muttama_data, coord,
by = c('site_code', "site_mut"),
copy = T)
Muttama_gw <- left_join(GW_data, coord,
by = 'site_code',
copy = T)
knitr::include_graphics("Figures/gw_or_sw_map.png")
#Muttama_maps.rmd
field<-c('pH','EC (Electrical conductivity)', 'SPC (temperature corrected EC)', 'Temperature', 'Alkalinity (HCO3)', 'Dissolved Oxygen (DO)', 'Turbidity')
lab<-read_csv('../../Muttama Dataset Analysis/Data/lab.csv')
field<-c('pH','EC (Electrical conductivity)', 'SPC (temperature corrected EC)', 'Temperature', 'Alkalinity (HCO3)', 'Dissolved Oxygen (DO)', 'Turbidity')
lab<-read_csv('Data/lab.csv')
table_M <- tibble(`Field measurements` = c(field,rep(NA,2)),
`Lab repeat` = c(unlist(lab[1:3,1]), rep(NA,6)),
`Anions` = c(unlist(lab[4:9,1]),rep(NA,3)),
`Cations` = unlist(lab[,2]))
options(knitr.kable.NA = '')
knitr::kable(table_M, "latex", caption = "Variables measured in the field and laboratory") %>% kable_styling()
Muttama_na<- Muttama %>%
dplyr::select(everything()) %>%
group_by(src) %>%
summarise_all(funs(sum(is.na(.)/nrow(Muttama))*100))
Muttama_na%>%
pivot_longer(temp_field:nh3_field,
names_to = "Measurement",
values_to = "Number_NA") %>%
ggplot(aes(x = Measurement, y = Number_NA,
fill = as.factor(src))) +
geom_bar(stat="identity", position="dodge") +
theme(axis.text.x= element_text(angle=90)) +
ylab("NA values in dataset (%)") + labs(fill="Source")
ggsave("Figures/na_count.png", unit="cm", dpi = 300)
#GWdata <- read_csv("../Muttama Dataset Analysis/Data/Muttama_Piezometer_Output.csv")
no_piezo <- length(unique(GWdata$Piezo))
#GWdata <- read_csv("../Muttama Dataset Analysis/Data/Muttama_Piezometer_Output.csv")
no_piezo <- length(unique(Muttama_gw$Piezo))
GWdata_NA <- Muttama_gw %>%
mutate(na_value = ifelse(is.na(`Final GW Depth (m)`)==T,1,0)) %>%
group_by(Date) %>%
summarise(NA_count = sum(na_value)/no_piezo*100,
Piezo = unique(Piezo))
GWdata_NA %>%
ggplot(aes(Date, NA_count)) + geom_bar(fill = "blue", stat="identity") +
ylim(0,75) + theme_bw() + ylab("% missing values across all piezo's") +
theme(axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.5))
ggsave("Figures/na_GW.png", unit="cm", dpi = 300)
#GWdata <- read_csv("../Muttama Dataset Analysis/Data/Muttama_Piezometer_Output.csv")
no_piezo <- length(unique(Muttama_gw$Piezo))
GWdata_NA <- Muttama_gw %>%
mutate(na_value = ifelse(is.na(`Final GW Depth (m)`)==T,1,0)) %>%
group_by(Date) %>%
summarise(NA_count = sum(na_value)/no_piezo*100,
Piezo = unique(Piezo))
GWdata_NA %>%
ggplot(aes(Date, NA_count)) + geom_bar(fill = "blue", stat="identity") +
ylim(0,75) + theme_bw() + ylab("% missing values across all piezo's") +
theme(axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.5)))
ggsave("Figures/na_GW.png", unit="cm", dpi = 300)
knitr::include_graphics("Figures/na_count.png")
#Muttama_NA_count.rmd
knitr::include_graphics("Figures/na_GW.png")
##GW
Muttama_sum<- Muttama_data %>%
select_at(vars('gw_or_sw',temp_field:nh3_field))%>%
subset(gw_or_sw=='GW')%>%
group_by(gw_or_sw)%>%
summarise_all(funs(mean,min,max),na.rm=T)
means <- Muttama_sum %>%
gather(key = "element", value="Mean", ends_with("mean")) %>%
select(element,Mean)
##GW
Muttama_sum<- Muttama_data %>%
select_at(vars('gw_or_sw',temp_field:nh3_field))%>%
subset(gw_or_sw=='GW')%>%
group_by(gw_or_sw)%>%
summarise_all(funs(mean,min,max),na.rm=T)
means <- Muttama_sum %>%
gather(key = "element", value="Mean", ends_with("mean")) %>%
dplyr::select(element,Mean)
mins <- Muttama_sum %>%
gather(key = "element1", value="Min", ends_with("min")) %>%
dplyr::select(element1,Min)
max <- Muttama_sum %>%
gather(key = "element2", value="Max", ends_with("max")) %>%
dplyr::select(element2,Max)
muttama_statGW<-cbind(means,mins,max)%>%
mutate(element=substr(element,1,nchar(element)-5))%>%
dplyr::select(c(element,Mean,Min,Max))%>%
mutate_if(is.numeric,round,1)
##SW
Muttama_sum<- Muttama_data %>%
select_at(vars('gw_or_sw',temp_field:nh3_field))%>%
subset(gw_or_sw=='SW')%>%
group_by(gw_or_sw)%>%
summarise_all(funs(mean,min,max),na.rm=T)
means <- Muttama_sum %>%
gather(key = "element", value="Mean", ends_with("mean")) %>%
dplyr::select(element,Mean)
mins <- Muttama_sum %>%
gather(key = "element1", value="Min", ends_with("min")) %>%
dplyr::select(element1,Min)
max <- Muttama_sum %>%
gather(key = "element2", value="Max", ends_with("max")) %>%
dplyr::select(element2,Max)
muttama_statSW<-cbind(means,mins,max)%>%
mutate(element=substr(element,1,nchar(element)-5))%>%
dplyr::select(c(Mean,Min,Max))%>%
mutate_if(is.numeric,round,1)
##combine SW and GW
muttama_stat<-cbind(muttama_statGW,muttama_statSW)%>%
as.data.frame()
#write.table(muttama_stat,file='Muttamastat.csv',sep=',',qmethod='double')
#muttama_stat<-read.csv('../../Muttama Dataset Analysis/Data/Muttamastat.csv')
muttama_stat%>%
knitr::kable("latex", col.names = c('Element', rep(c('Mean', 'Min', 'Max'), 2)),caption='Summary statistics for elements measured in the field') %>%
add_header_above(c('', 'GW'=3, 'SW'=3))%>% kable_styling()
#Muttama_NA_count
knitr::include_graphics("Figures/gwsw.png")
#Muttama_ph_ec
knitr::include_graphics("Figures/monthly.png")
#Muttama_Time.rmd
knitr::include_graphics("Figures/annual.png")
#Muttama_Time.rmd
knitr::include_graphics("Figures/FDC.png")
#Muttama_FDC.rmd
knitr::include_graphics("Figures/Final_Corrected_piezodepths.png")
knitr::include_graphics("Figures/ec_map.png")
#Muttama_maps.rmd
knitr::include_graphics("Figures/ec_plot.png")
#Muttama_maps.rmd
knitr::include_graphics("Figures/clhco3_map.png")
#Muttama_maps.rmd
knitr::include_graphics("Figures/clhco3_plot.png")
#Muttama_maps.rmd
# input data need to be in % divide by sums
cation_sum <-  Muttama_data$ca_meq_l +  Muttama_data$mg_meq_l +
Muttama_data$na_meq_l +  Muttama_data$k_meq_l
anion_sum <- Muttama_data$cl_meq_l + Muttama_data$hco3_meq_l +
Muttama_data$so4_meq_l
piper_data <- tibble(Ca = Muttama_data$ca_meq_l/cation_sum,
Mg = Muttama_data$mg_meq_l/cation_sum,
Cl = Muttama_data$cl_meq_l/anion_sum,
SO4 = Muttama_data$so4_meq_l/anion_sum,
name = Muttama_data$gw_or_sw,
ion_balance = Muttama_data$ion_balance)
# load the piper plot code
source("scripts/ggplot_piper.R")
piper_data <- transform_piper_data(Mg = piper_data$Mg,
Ca = piper_data$Ca,
Cl = piper_data$Cl, SO4 = piper_data$SO4,
name = piper_data$name, offset = 1)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,(y), colour=factor(observation)), size=4, data=piper_data)
# input data need to be in % divide by sums
cation_sum <-  Muttama_data$ca_meq_l +  Muttama_data$mg_meq_l +
Muttama_data$na_meq_l +  Muttama_data$k_meq_l
anion_sum <- Muttama_data$cl_meq_l + Muttama_data$hco3_meq_l +
Muttama_data$so4_meq_l
piper_data <- tibble(Ca = Muttama_data$ca_meq_l/cation_sum,
Mg = Muttama_data$mg_meq_l/cation_sum,
Cl = Muttama_data$cl_meq_l/anion_sum,
SO4 = Muttama_data$so4_meq_l/anion_sum,
name = Muttama_data$gw_or_sw,
ion_balance = Muttama_data$ion_balance)
# load the piper plot code
source("scripts/ggplot_piper.R")
piper_data <- transform_piper_data(Mg = piper_data$Mg,
Ca = piper_data$Ca,
Cl = piper_data$Cl, SO4 = piper_data$SO4,
name = piper_data$name)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,(y), colour=factor(observation)), size=4, data=piper_data)
# input data need to be in % divide by sums
cation_sum <-  Muttama_data$ca_meq_l +  Muttama_data$mg_meq_l +
Muttama_data$na_meq_l +  Muttama_data$k_meq_l
anion_sum <- Muttama_data$cl_meq_l + Muttama_data$hco3_meq_l +
Muttama_data$so4_meq_l
piper_data <- tibble(Ca = Muttama_data$ca_meq_l/cation_sum,
Mg = Muttama_data$mg_meq_l/cation_sum,
Cl = Muttama_data$cl_meq_l/anion_sum,
SO4 = Muttama_data$so4_meq_l/anion_sum,
name = Muttama_data$gw_or_sw,
ion_balance = Muttama_data$ion_balance)
# load the piper plot code
source("scripts/ggplot_piper.R")
piper_data_plot <- transform_piper_data(Mg = piper_data$Mg,
Ca = piper_data$Ca,
Cl = piper_data$Cl, SO4 = piper_data$SO4,
name = piper_data$name)
View(piper_data_plot)
View(piper_data)
# input data need to be in % divide by sums
cation_sum <-  Muttama_data$ca_meq_l +  Muttama_data$mg_meq_l +
Muttama_data$na_meq_l +  Muttama_data$k_meq_l
anion_sum <- Muttama_data$cl_meq_l + Muttama_data$hco3_meq_l +
Muttama_data$so4_meq_l
piper_data <- tibble(Ca = Muttama_data$ca_meq_l/cation_sum*100,
Mg = Muttama_data$mg_meq_l/cation_sum*100,
Cl = Muttama_data$cl_meq_l/anion_sum*100,
SO4 = Muttama_data$so4_meq_l/anion_sum*100,
name = Muttama_data$gw_or_sw,
ion_balance = Muttama_data$ion_balance)
# load the piper plot code
source("scripts/ggplot_piper.R")
piper_data_plot <- transform_piper_data(Mg = piper_data$Mg,
Ca = piper_data$Ca,
Cl = piper_data$Cl, SO4 = piper_data$SO4,
name = piper_data$name)
View(piper_data_plot)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,y, colour=factor(observation)), size=4, data=piper_data_plot)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,y, colour=factor(observation)), size=2, data=piper_data_plot)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,y, colour=factor(observation)), size=2, data=piper_data_plot)
ggsave("Figures/piper_plot.png", unit="cm", dpi = 300,
width = 15, height = 20)
#ggplot_piper()
ggplot_piper() + geom_point(aes(x,y, colour=factor(observation)), size=2, data=piper_data_plot) + scale_colour_manual(name="Ground Water or Surface Water", values=c(GW = "red", SW = "darkblue"))
ggsave("Figures/piper_plot.png", unit="cm", dpi = 300,
width = 15, height = 20)
ggsave("Figures/piper_plot.png", unit="cm", dpi = 300,
width = 20, height = 10)
knitr::include_graphics("Figures/piper_plot.png")
#Muttama_maps.rmd
install.packages("rticles")
tinytex::reinstall_tinytex(repository = "illinois")
View(Muttama_data)
View(Muttama)
unlink("MuttamaDataPaper_cache", recursive = TRUE)
unlink("MuttamaDataPaper_cache", recursive = TRUE)
# knitr::opts_chunk$set(root.dir = '~/GitHub/MuttamaDataPaper/MuttamaDataPaper')
options(tinytex.verbose = TRUE)
require(knitr)
require(bookdown)
require(pander)
require(tidyverse)
require(ggpubr) # saving ggplot figures
library(kableExtra) ##table formatting package
require(multirow)
require(caption)
library(sf)
#library(rgdal) # check if spatial stuff still works
#library(graphics) #needed?
library(raster)
library(ggspatial)
library(ggrepel)
library(ggpubr)
theme_set(theme_bw()) # ggplot theme
# define colour palette colour blind friendly
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#CC79A7", "#F0E442", "#0072B2", "#D55E00","#999999")
# Read in the streamflow data
coolac<-read_csv('Data/coolac.csv')
coolac <- coolac %>%
mutate(Date = ymd_hms(`#Timestamp`))%>%
mutate(Date = date(Date))%>%
rename(Flow = Value)%>%
dplyr::select(Date, Flow)
##read in Muttama water quality data data
Muttama_data<-read_csv("Data/MuttamaWaterQuality-Publish_2025.csv")
Muttama_data<-Muttama_data%>%
mutate(datetime = dmy_hm(datetime)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = substr(record_id,14,15),
src = replace_na(src,1),
site_code = substr(record_id,14,17))
time_period <- max(Muttama_data$Year) - min(Muttama_data$Year)
## Groundwater level data (summarised to daily and corrected)
GW_data <- read_csv("Data/Muttama_piezometer_output.csv") %>%
mutate(datetime = ymd(Date)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = "GW",
site_code = Piezo,
site_m = as.integer(substr(Piezo,3,4)))
# Rainfall data
rainfall<-read_csv("Data/Cootamundra_rainfall.csv")
rainfall <- rainfall %>%
mutate(Date = ymd(paste(Year,Month,Day, sep = "-"))) %>%
filter(Year > 2009 & Year < 2025)
# include the coordinates for the sample data
coord <- read_csv("Data/SiteList.csv")
coord <- coord %>%
mutate(site_m = substr(site_longname,3,4),
site_code = substr(site_longname,1,4))%>%
transform(site_m = as.integer(site_m))
Muttama <- left_join(Muttama_data, coord,
by = c('site_code','site_mut'),
copy = T)
Muttama_gw <- left_join(GW_data, coord,
by = c('site_code', 'site_m'),
copy = T)
#Combine flow data with water quality data
Muttama_joined <- left_join(Muttama , coolac, by = "Date") %>%
dplyr::select(Date,Flow, src)
#identify source 4 in the data
Muttama <- Muttama %>%
mutate(src = ifelse(str_detect(Muttama$record_id,"_AS")==T,4,src))
# correct watertype 3 to 2 for autosamplers
Muttama <- Muttama %>%
mutate(water_type = ifelse(str_detect(Muttama$record_id,"_AS")== T, 2,
water_type))
#Join the flow data with the water quality data
## Flow duration curve for Coolac
n <- nrow(na.omit(coolac))
Q_sort <- coolac %>%
na.omit() %>%
arrange(desc(Flow))
rank_coolac <- 1:n
Prob_coolac <- rank_coolac/(n+1)
coolac_df <- data.frame(Probability=Prob_coolac*100, Flow=Q_sort$Flow)
# do the same for the water quality data
Muttama_df <- Muttama_joined %>%
group_by(Date) %>%
summarise(n=n(),
Flow = mean(Flow), src = unique(src))%>%
ungroup() %>%
arrange(desc(Flow))
# join on probabilities
Muttama_prob <- left_join(Muttama_df, coolac_df)
#Finally we can make the plot
coolac_df %>%
ggplot(aes(Probability,Flow)) +
geom_line(colour="#999999", linewidth = 2) +
geom_point(data=na.omit(Muttama_prob),
aes(Probability, Flow, alpha = 0.5, size = n,colour= as.factor(src))) +
theme_bw() +
ylab(expression(Streamflow~'['*m^3~s^{-1}*']')) + xlab("Probability of exceedance") +
# scale_y_log10() +
scale_y_continuous(trans = "log10",
breaks = 10^(-3:2),
labels = scales::label_log()) +
scale_alpha_continuous(guide='none') +
scale_colour_manual(name = 'Source', values = cbPalette)
#labs(colour = 'Source')
ggsave("Figures/FDC.png", unit="cm", dpi = 300, width = 12, height = 9)
# Read in the streamflow data
coolac<-read_csv('Data/coolac.csv')
coolac <- coolac %>%
mutate(Date = ymd_hms(`#Timestamp`))%>%
mutate(Date = date(Date))%>%
rename(Flow = Value)%>%
dplyr::select(Date, Flow)
##read in Muttama water quality data data
Muttama_data<-read_csv("Data/MuttamaWaterQuality-Publish_2025.csv")
Muttama_data<-Muttama_data%>%
mutate(datetime = dmy_hm(datetime)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = substr(record_id,14,15),
src = replace_na(src,1),
site_code = substr(record_id,14,17))
time_period <- max(Muttama_data$Year) - min(Muttama_data$Year)
## Groundwater level data (summarised to daily and corrected)
GW_data <- read_csv("Data/Muttama_piezometer_output.csv") %>%
mutate(datetime = ymd(Date)) %>%
mutate(Month = month(datetime),
Year = year(datetime),
Date = date(datetime),
gw_or_sw = "GW",
site_code = Piezo,
site_m = as.integer(substr(Piezo,3,4)))
# Rainfall data
rainfall<-read_csv("Data/Cootamundra_rainfall.csv")
rainfall <- rainfall %>%
mutate(Date = ymd(paste(Year,Month,Day, sep = "-"))) %>%
filter(Year > 2009 & Year < 2025)
# include the coordinates for the sample data
coord <- read_csv("Data/SiteList.csv")
coord <- coord %>%
mutate(site_m = substr(site_longname,3,4),
site_code = substr(site_longname,1,4))%>%
transform(site_m = as.integer(site_m))
Muttama <- left_join(Muttama_data, coord,
by = c('site_code','site_mut'),
copy = T)
#identify source 4 in the data
Muttama <- Muttama %>%
mutate(src = ifelse(str_detect(Muttama$record_id,"_AS")==T,4,src))
# correct watertype 3 to 2 for autosamplers
Muttama <- Muttama %>%
mutate(water_type = ifelse(str_detect(Muttama$record_id,"_AS")== T, 2,
water_type))
Muttama_gw <- left_join(GW_data, coord,
by = c('site_code', 'site_m'),
copy = T)
#Combine flow data with water quality data
Muttama_joined <- left_join(Muttama , coolac, by = "Date") %>%
dplyr::select(Date,Flow, src)
#Join the flow data with the water quality data
## Flow duration curve for Coolac
n <- nrow(na.omit(coolac))
Q_sort <- coolac %>%
na.omit() %>%
arrange(desc(Flow))
rank_coolac <- 1:n
Prob_coolac <- rank_coolac/(n+1)
coolac_df <- data.frame(Probability=Prob_coolac*100, Flow=Q_sort$Flow)
# do the same for the water quality data
Muttama_df <- Muttama_joined %>%
group_by(Date) %>%
summarise(n=n(),
Flow = mean(Flow), src = unique(src))%>%
ungroup() %>%
arrange(desc(Flow))
# join on probabilities
Muttama_prob <- left_join(Muttama_df, coolac_df)
#Finally we can make the plot
coolac_df %>%
ggplot(aes(Probability,Flow)) +
geom_line(colour="#999999", linewidth = 2) +
geom_point(data=na.omit(Muttama_prob),
aes(Probability, Flow, alpha = 0.5, size = n,colour= as.factor(src))) +
theme_bw() +
ylab(expression(Streamflow~'['*m^3~s^{-1}*']')) + xlab("Probability of exceedance") +
# scale_y_log10() +
scale_y_continuous(trans = "log10",
breaks = 10^(-3:2),
labels = scales::label_log()) +
scale_alpha_continuous(guide='none') +
scale_colour_manual(name = 'Source', values = cbPalette)
#labs(colour = 'Source')
ggsave("Figures/FDC.png", unit="cm", dpi = 300, width = 12, height = 9)
